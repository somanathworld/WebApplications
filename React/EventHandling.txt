Axios
- Returns data in JSON format.
- It supports all request methods.
- It uses "sync & async" techniques.
- It uses unblocking technique, It executes the given task along with other tasks.
- It handles CORS issues
- It handles XSS [Cross Site Scripting Attacks]
- It handles multiple requests with one method.


Syntax:
axios({
    method : "GET | POST"
    url: "api url",
    data: "the data to post"
})


Syntax:   
axios.get("api url").then(function(response){}).then(function(){})




Syntax:
axios({
    [
         axios.get(), [0]
         axios.get() [1]
    ]
})


Install axios:
> npm  install  axios --save


Axios Response Details:
===================
 Axios makes a request to the API and gets response, which comprises of following details
a) status status code  200 - OK,  404 - Not Found
b) statusText OK, NotFound
c) headers Request Type, Content Type
d) data response data


Syntax:
axios.get("url")
.then(response => {
       response.status, 200
       response.statusText, OK
       response.data { } [ ]
})


Ex:
import axios from "axios"
import { useState, useEffect } from "react"


export default function AxiosDemoComponent(){
    const [categories, setCategories] = useState([]);
    const [products, setProducts] = useState([]);


    function GetCategories(){
        axios.get("http://fakestoreapi.com/products/categories&quot;)
        .then(response=> {
            response.data.unshift("All");
            setCategories(response.data);
            
        })
    }


    function GetProducts(){
        axios.get("http://fakestoreapi.com/products&quot;)
        .then(response=> {
            setProducts(response.data);
        })
    }


    useEffect(()=> {
        GetCategories();
        GetProducts();
    },[])


    return(
        <div className="container-fluid">
            <div className="text-center bg-danger text-white">
                <h1>Amazon Shopping</h1>
            </div>
            <div className="row">
                <div className="col-3">
                  <h3>Select Category</h3>
                  <select className="form-select">
                      {
                          categories.map(category => 
                             <option key={category}>
                                 {category.toUpperCase()}
                             </option>
                            )
                      }
                  </select>
                </div>
                <div className="col-9">
                <div className="d-flex flex-wrap">
                       {
                           products.map(product=> 
                             <div key={product.id} className="card m-2 w-25">
                                <img alt="preview" src={product.image} className="card-img-top" style={{height:'150px'}} />
                                <div className="card-header" style={{height:'120px'}}>
                                    {product.title}
                                </div>
                                <div className="card-body">
                                    <p>{product.price}</p>
                                </div>
                                <div className="card-footer">
                                   <button className="btn btn-danger w-100">
                                       <span className="bi bi-cart4"></span>
                                       Add to Cart
                                   </button>
                                </div>
                             </div>
                            
                            )
                       }
                    </div>
                </div>
            </div>
        </div>
    )
}


          React Event Binding
- What is an Event?
  Event is a message sent by sender to its subscriber in order notify the change.
  Event follows a software design pattern called "Observer".
  Observer is a communication pattern. [Behavioral Patterns]


a) Creational
b) Structural
c) Behavioral


- What is Synthetic Event?
 * All Events are related to Browser.
 * We call them as "Browser Events".
 * React can't handle directly browser events.
 * React uses Virtual DOM
 * React uses "SyntheticEvents" base class to communicate with browser events.


SyntheticEvent BrowserEvent
===================================
onClick onclick
onChange onchange
onBlur onblur


* Synthetic Events uses delegate mechanism


Browser Event :      <button  onclick="InsertClick()">
Synthetic Event :      <button  onClick={InsertClick}>


* All React Events are Synthetic Events


* Browser Event have 2 args 
a) this - contains info. about object [element]
   id, class, name, value
b) event - contains info. about event 
   clientX, clientY, keyCode, charCode, altKey




            <button onclick="InsertClick(this, event)">


             function InsertClick(obj, e)
{
        obj.id, className, name, value;
        e.clientX, clientY, shiftKey;
}






* Synthetic Event have only 1 arg
a) event


event.eventArgs
                 event.target.objProperties


<button onClick={InsertClick}>


function  InsertClick(SE)
{
      SE.target.id, className, name, value;
      SE.clientX, clientY, shiftKey
}




Ex:


export default function EventDemoComponent(){


    function InsertClick(SyntheticEvent){
        document.write(`
           Id : ${SyntheticEvent.target.id} <br>
           Name: ${SyntheticEvent.target.name} <br>
           Class Name: ${SyntheticEvent.target.className} <br>
           X Position: ${SyntheticEvent.clientX} <br>
        `);
    }
    return(
        <div className="container-fluid">
            <h2>Events Demo</h2>
            <button id="btnInsert" onClick={InsertClick} name="Insert" className="btn btn-primary">Insert</button>
        </div>
    )
}


React Synthetic Events
- Clipboard Events
- Touch Events
-  Keyboard Events
-  Mouse Events
-  Focus Events

FAQ: What are controlled and uncontrolled components?
Ans:  The components with event handlers using state and bind methods are called "Controlled Component".


         The component with event handler using DOM manipulations and not using any bind methods is know as "Uncontrolled Component".




               Keyboard Events
- To handle interaction with keys.
- The events are
onKeyUp
onKeyDown
onKeyPress
- Event  Properties used for Keyboard events


keyCode actual keycode
charCode char code as per UTF
which similar to keycode [enhanced keyboard]
shiftKey true/false
ctrlKey true/false
altKey true/false


Ex:


import { useState } from "react";


export default function KeyDemoComponent()
{
    const [users] = useState([{UserName:'john'},{UserName:'john12'},{UserName:'john_nit'}, {UserName:'david'}]);
    const [userMessage, setUserMessage] = useState('');
    const [isValid, setIsValid] = useState(false);
    const [showWarning, setShowWarning] = useState(false);


    function VerifyUserName(event){
        for(var user of users)
        {
             if(user.UserName==event.target.value)
             {
                 setUserMessage('User Name Taken - Try Another');
                 setIsValid(false);
                 break;
             } else {
                 setUserMessage('User Name Available');
                 setIsValid(true);
             }
        }
    }
    function NameBlur(){
        setUserMessage('');
    }


    function VerifyPassword(event){
         if((event.which>=65 && event.which<=90)||(event.keyCode>=65 && event.keyCode<=90)) {
             setShowWarning(true);
         } else {
             setShowWarning(false);
         }
    }


    return(
        <div className="container-fluid">
            <h2>Register User</h2>
            <dl>
                <dt>User Name</dt>
                <dd><input type="text" onKeyUp={VerifyUserName} onBlur={NameBlur} /></dd>
                <dd className={(isValid==true)?'text-success':'text-danger'}>{userMessage}</dd>
                <dt>Password</dt>
                <dd><input type="password" onKeyPress={VerifyPassword} /></dd>
                <dd className={(showWarning==true)?'d-block':'d-none'}>
                    <span className="bi bi-exclamation-triangle-fill"></span> 
                    Caps ON
                </dd>
            </dl>
        </div>
    )
}


Ex:  Key Events Example




import { useState } from "react";


export default function KeyDemoComponent()
{
    const [users] = useState([{UserName:'john'},{UserName:'john12'},{UserName:'john_nit'}, {UserName:'david'}]);
    const [userMessage, setUserMessage] = useState('');
    const [isValid, setIsValid] = useState(false);
    const [showWarning, setShowWarning] = useState(false);
    const [pwdMessage, setPwdMessage] = useState('');
    const [regExp] = useState(/(?=.*[A-Z])\w{4,10}/);


    function VerifyUserName(event){
        for(var user of users)
        {
             if(user.UserName==event.target.value)
             {
                 setUserMessage('User Name Taken - Try Another');
                 setIsValid(false);
                 break;
             } else {
                 setUserMessage('User Name Available');
                 setIsValid(true);
             }
        }
    }
    function NameBlur(){
        setUserMessage('');
    }


    function VerifyPassword(event){
         if((event.which>=65 && event.which<=90)||(event.keyCode>=65 && event.keyCode<=90)) {
             setShowWarning(true);
         } else {
             setShowWarning(false);
         }
    }


    function CheckPasswordStrength(event){
         if(event.target.value.match(regExp)) {
              setPwdMessage('Strong Password');
         } else {
             if(event.target.value.length<4){
                 setPwdMessage('Poor Password');
             } else {
                 setPwdMessage('Weak Password');
             }
         }
    }


    return(
        <div className="container-fluid">
            <h2>Register User</h2>
            <dl>
                <dt>User Name</dt>
                <dd><input type="text" onKeyUp={VerifyUserName} onBlur={NameBlur} /></dd>
                <dd className={(isValid==true)?'text-success':'text-danger'}>{userMessage}</dd>
                <dt>Password</dt>
                <dd><input type="password" onKeyUp={CheckPasswordStrength} onKeyPress={VerifyPassword} /></dd>
                <dd className={(showWarning==true)?'d-block':'d-none'}>
                    <span className="bi bi-exclamation-triangle-fill"></span> 
                    Caps ON
                </dd>
                <dd>{pwdMessage}</dd>
            </dl>
        </div>
    )
}


                  TouchEvents
onTouchStart
onTouchEnd
onTouchMove
[React Native - Ionic, Cordova, Native Script, ]


Ex:


import { useState } from "react";


export default function KeyDemoComponent()
{
    const [users] = useState([{UserName:'john'},{UserName:'john12'},{UserName:'john_nit'}, {UserName:'david'}]);
    const [userMessage, setUserMessage] = useState('');
    const [isValid, setIsValid] = useState(false);
    const [showWarning, setShowWarning] = useState(false);
    const [pwdMessage, setPwdMessage] = useState('');
    const [regExp] = useState(/(?=.*[A-Z])\w{4,10}/);
    const [offer, setOffer] = useState('');


    function VerifyUserName(event){
        for(var user of users)
        {
             if(user.UserName==event.target.value)
             {
                 setUserMessage('User Name Taken - Try Another');
                 setIsValid(false);
                 break;
             } else {
                 setUserMessage('User Name Available');
                 setIsValid(true);
             }
        }
    }
    function NameBlur(){
        setUserMessage('');
    }


    function VerifyPassword(event){
         if((event.which>=65 && event.which<=90)||(event.keyCode>=65 && event.keyCode<=90)) {
             setShowWarning(true);
         } else {
             setShowWarning(false);
         }
    }


    function CheckPasswordStrength(event){
         if(event.target.value.match(regExp)) {
              setPwdMessage('Strong Password');
         } else {
             if(event.target.value.length<4){
                 setPwdMessage('Poor Password');
             } else {
                 setPwdMessage('Weak Password');
             }
         }
    }


    function GetImageId(event){
        switch(event.target.id){
            case 'mobile': 
            setOffer('50% OFF on all smart phones');
            break;
            case 'boat': 
            setOffer('20% OFF on boAt headbands');
            break;
            case 'laptop': 
            setOffer('60% OFF on Gaming Laptops');
            break;
        }
    }


    return(
        <div className="container-fluid">
            <h2>Products</h2>
            <img id="mobile" onTouchStart={GetImageId} alt="pic" src={'images/mobile.PNG'} width="100" height="100" />
            <img id="boat" onTouchStart={GetImageId} alt="pic" src={'images/neckband.PNG'} width="100" height="100" />
            <img id="laptop" onTouchStart={GetImageId} alt="pic" src={'images/laptop.PNG'} width="100" height="100" />
            <h1>{offer}</h1>
            <h2>Register User</h2>
            <dl>
                <dt>User Name</dt>
                <dd><input type="text" onKeyUp={VerifyUserName} onBlur={NameBlur} /></dd>
                <dd className={(isValid==true)?'text-success':'text-danger'}>{userMessage}</dd>
                <dt>Password</dt>
                <dd><input type="password" onKeyUp={CheckPasswordStrength} onKeyPress={VerifyPassword} /></dd>
                <dd className={(showWarning==true)?'d-block':'d-none'}>
                    <span className="bi bi-exclamation-triangle-fill"></span> 
                    Caps ON
                </dd>
                <dd>{pwdMessage}</dd>
            </dl>
        </div>
    )
}
